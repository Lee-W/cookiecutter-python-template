[tool.commitizen]
name = "cz_conventional_commits"
version = "{{ cookiecutter.version }}"
tag_format = "$version"

[tool.coverage]
    [tool.coverage.report]
    show_missing = true
    exclude_lines = [
        # Have to re-enable the standard pragma
        'pragma: no cover',

        # Don't complain about missing debug-only code:
        'def __repr__',
        'if self\.debug',

        # Don't complain if tests don't hit defensive assertion code:
        'raise AssertionError',
        'raise NotImplementedError',

        # Don't complain if non-runnable code isn't run:
        'if 0:',
        'if __name__ == .__main__.:'
    ]
    omit = [
        'env/*',
        'venv/*',
        '*/virtualenv/*',
        '*/virtualenvs/*',
        '*/tests/*'
    ]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

{%- if cookiecutter.dependency_management_tool=='poetry' -%}
[tool.poetry]
name = "cookiecutter-python-template"
version = "1.0.0"
description = ""
authors = ["Wei Lee <weilee.rx@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.7"

[tool.poetry.dev-dependencies]
# task management
invoke = "^1.4.1"
# test
pytest = "^5.4.1"
pytest-cov = "^2.8.1"
pytest-mock = "^3.0.0"
pytest-xdist = "^1.31.0"
hypothesis = "^5.8.0"
pytest-cookies = "^0.5.1"
# style
flake8 = "^3.7.9"
pylint = "^2.4.4"
mypy = "^0.770"
isort = "^4.3.21"
black = "^19.10b0"
# security
bandit = "^1.6.2"
safety = "^1.8.7"
coverage = "^5.0.4"
# git
commitizen = "^1.17.1"
pre-commit = "^2.2.0"
# documentation
mkdocs = "^1.1"
mkdocs-material = "^5.0.1"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
{%- endif %}
