[tool.commitizen]
name = "cz_conventional_commits"
version = "1.11.0"
tag_format = "$version"
version_files = ["cookiecutter.json", "pyproject.toml"]


[tool.mypy]
files = ["tasks", "hooks", "tests"]
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true


[tool.ruff]
line-length = 110

[tool.ruff.lint]
extend-select = [
    "I",     # Missing required import (auto-fixable)
    "UP",    # Pyupgrade
    "PT",    # flake8-pytest-style rules
    "TID25", # flake8-tidy-imports rules
]

ignore = ["E501", "D1", "D415"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
known-first-party = ["tests"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.pytest.ini_options]
minversion = "8.0.0"
testpaths = "tests"
addopts = "--strict-markers"
norecursedirs = [
    ".*",
    "build",
    "dist",
    "CVS",
    "_darcs",
    "{arch}",
    "*.egg",
    "venv",
    "env",
    "virtualenv",
]
markers = ["slow"]


[tool.coverage]
[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',

    # Don't complain about missing debug-only code:
    'def __repr__',
    'if self\.debug',

    # Don't complain if tests don't hit defensive assertion code:
    'raise AssertionError',
    'raise NotImplementedError',

    # Don't complain if non-runnable code isn't run:
    'if 0:',
    'if __name__ == .__main__.:',
]
omit = ['env/*', 'venv/*', '*/virtualenv/*', '*/virtualenvs/*', '*/tests/*']


[tool.poetry]
name = "cookiecutter-python-template"
version = "1.11.0"
description = " Python Project template that supports PyPI publishment and basic docker image "
authors = ["Wei Lee <weilee.rx@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
# task management
invoke = "^2.2.0"
# test
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-mock = "^3.0.0"
pytest-xdist = "^3.6.1"
pytest-cookies = "^0.6.1"
coverage = { extras = ["toml"], version = "^7.6.1" }
# style
ruff = "^0.6.5"
mypy = "^1.11.1"
# security
bandit = "^1.7.9"
pip-audit = "^2.7.3"
# git
commitizen = "^3.29.0"
pre-commit = "^4.0.0"
# documentation
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.34"

[build-system]
requires = ["poetry>=1.11.0"]
build-backend = "poetry.masonry.api"
