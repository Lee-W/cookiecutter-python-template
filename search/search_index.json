{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#cookiecutter-python-template","title":"Cookiecutter Python Template","text":""},{"location":"#features","title":"Features","text":"<ul> <li>pipenv or poetry: dependency and virtual environment management</li> <li>Coding style<ul> <li>ruff: check coding style and format it</li> <li>mypy: check static typing</li> </ul> </li> <li>Test thought pytest with the following plugins<ul> <li>pytest-cov: generate test coverage repo</li> <li>pytest-mock: mocking</li> </ul> </li> <li>commitizen:<ul> <li>regulate git commit convention</li> <li>bump project version</li> <li>generate changelog automatically</li> </ul> </li> <li>Security check through<ul> <li>bandit</li> <li>pip-audit</li> </ul> </li> <li>mkdocs: generate documentation</li> <li>pre-commit: git-hook to run the above tools automatically</li> <li>invoke: organize the tools above (like Makefile in PYthon)</li> <li>CI/CD<ul> <li>GitHub Actions workflows for<ul> <li>checking coding style</li> <li>testing</li> <li>publishing package to PyPI</li> <li>pushing documentation to GitHub pages</li> </ul> </li> <li>GitHub issue templates, pull request template</li> </ul> </li> <li>General Python project Dockerfile</li> <li>Consolidate most of the tool configurations in <code>pyproject.toml</code></li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Python</li> <li>cruft</li> </ul>"},{"location":"#usage","title":"Usage","text":"<pre><code>cruft create https://github.com/Lee-W/cookiecutter-python-template\n</code></pre>"},{"location":"#setup-secrets-for-github-actions","title":"Setup secrets for GitHub Actions","text":"<ul> <li>Required GitHub repository secrets<ul> <li><code>PERSONAL_ACCESS_TOKEN</code>: GitHub personal access token used to bump project version automatically<ul> <li>Refer to Creating a personal access token to generate one</li> </ul> </li> <li>(optional) <code>pypi_password</code>: PyPI API token<ul> <li>required only if you set \"build_pypi_package\" to \"y\" during project creation</li> <li>Refer to How can I use API tokens to authenticate with PyPI? to generate one. Note that username <code>__token__</code> has been setup in the project</li> </ul> </li> </ul> </li> </ul>"},{"location":"#authors","title":"Authors","text":"<p>Lee-W</p>"}]}